version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"       # internal access (for Kafka Connect)
      - "29092:29092"     # external access (for Go on host)
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.4.4
    depends_on:
      - kafka
      - postgres
    ports:
      - "8083:8083"
    environment:
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "kafka-connect-group"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-configs"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/java/kafka-connect-jdbc"
      CONNECT_LOG4J_LOGGERS: org.reflections=ERROR
    volumes:
      - ./jdbc/postgresql-42.7.3.jar:/usr/share/java/kafka-connect-jdbc/postgresql-42.7.3.jar
      - ./jdbc/kafka-connect-jdbc-10.7.4.jar:/usr/share/java/kafka-connect-jdbc/kafka-connect-jdbc-10.7.4.jar
      - ./connector-config:/kafka-connectors

  connector-setup:
    image: curlimages/curl
    depends_on:
      - kafka-connect
    volumes:
      - ./connector-config:/kafka-connectors
    entrypoint: >
      sh -c "
        echo 'Waiting for Kafka Connect to start...';
        while [ $(curl -s -o /dev/null -w '%{http_code}' http://kafka-connect:8083/) -ne 200 ]; do
          echo 'Kafka Connect not ready yet...'; sleep 5;
        done;
        echo 'Kafka Connect is up. Creating connector...';
        curl -i -X POST -H 'Content-Type: application/json' --data '@/kafka-connectors/pg-source.json' http://kafka-connect:8083/connectors;
        sleep infinity;
      "
