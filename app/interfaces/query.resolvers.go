package interfaces

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.76

import (
	"context"
	"fmt"

	"github.com/meles-z/golang-graphql/app/generated"
	"github.com/meles-z/golang-graphql/app/models"
)

// Movies is the resolver for the movies field.
func (r *queryResolver) Movies(ctx context.Context, filter *models.MovieFilter) ([]*models.Movie, error) {
	panic(fmt.Errorf("not implemented: Movies - movies"))
}

// Movie is the resolver for the movie field.
func (r *queryResolver) Movie(ctx context.Context, id string) (*models.Movie, error) {
	panic(fmt.Errorf("not implemented: Movie - movie"))
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context, filter *models.UserFilter) ([]*models.User, error) {
	panic(fmt.Errorf("not implemented: Users - users"))
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, id string) (*models.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
